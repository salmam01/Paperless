services:
  paperless-db:
    image: postgres:latest
    container_name: paperless-db
    environment:
      POSTGRES_USER: swen3
      POSTGRES_PASSWORD: paperless123
      POSTGRES_DB: PaperlessDB
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U swen3 -d PaperlessDB"]
    networks:
      - paperless-network

  # RabbitMQ with management UI 
  paperless-rabbitmq:
    image: rabbitmq:3-management
    container_name: paperless-rabbitmq
    ports:
      - "5672:5672"   # AMQP
      - "15672:15672" # Management UI
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - paperless-network

  # Backend 
  paperless-api:
    build:
      context: .
      dockerfile: ./Paperless.API/API.Dockerfile
    container_name: paperless-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Host=paperless-db;Port=5432;Database=PaperlessDB;Username=swen3;Password=paperless123
      - RabbitMQ__Host=paperless-rabbitmq
      - RabbitMQ__Port=5672
      - RabbitMQ__User=guest
      - RabbitMQ__Password=guest
      - RabbitMQ__QueueName=document.uploaded
    ports:
      - "8080:8080"
    depends_on:
      paperless-db:
        condition: service_healthy
      paperless-rabbitmq:
        condition: service_started
    networks:
      - paperless-network

  # Frontend
  paperless-frontend:
    build:
      context: ./Paperless.Frontend
      dockerfile: Frontend.Dockerfile
    container_name: paperless-frontend
    ports:
      - "80:80"
    depends_on:
      - paperless-api
    networks:
      - paperless-network

  # OCR Worker
  paperless-worker:
    image: mcr.microsoft.com/dotnet/sdk:8.0
    container_name: paperless-worker
    working_dir: /src
    volumes:
      - ./:/src
    command: dotnet run --project ./Paperless.Services/Paperless.Services.csproj --no-restore --nologo
    depends_on:
      paperless-rabbitmq:
        condition: service_started
    environment:
      - RabbitMQ__Host=paperless-rabbitmq
      - RabbitMQ__Port=5672
      - RabbitMQ__User=guest
      - RabbitMQ__Password=guest
      - RabbitMQ__QueueName=document.uploaded
    networks:
      - paperless-network

networks:
  paperless-network:
    driver: bridge

volumes:
  pgdata: